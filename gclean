#!/bin/bash

# Flag to hold if -a was passed #
ALL=false
MAIN_BRANCH="main"
NPM_INSTALL=false
PRUNE_REMOTE=false
CLEAN_XDF=false
CLEAN_LOCAL=false
CLEAN_MERGED=false

cleanLocalBranches(){
	echo "Beginning branch clean-up"
	git branch | while read line
	do
		# This is the current branch or $MAIN_BRANCH, so skip it #
		if echo x"$line" | grep "*\|$MAIN_BRANCH" > /dev/null; then
			continue
		else
			if [[ $ALL == true ]]
			then
				git branch -D "$line"
			else
				echo "Delete branch: $line (y/n)?"
				read  -sn1 prompt < /dev/tty
				if [[ $prompt == "y" || $prompt == "Y" ]] 
				then 
					git branch -D "$line"
				else 
					echo "Did NOT delete $line"
				fi
			echo ""
			fi
		fi
	done

	# And we're done #
	echo "No branches left to operate on"
}

cleanRemoteBranches(){
	git remote prune origin
}

cleanMerged(){
	git branch --merged $MAIN_BRANCH | grep -v "\* $MAIN_BRANCH" | xargs -n 1 git branch -d
}

cleanXdf(){
	no > /dev/null 2>&1 | git clean -xdf
}

main(){
	if [[ $CLEAN_LOCAL == true ]]
	then
		cleanLocalBranches
	fi
	
	if [[ $PRUNE_REMOTE == true ]]
	then
		cleanRemoteBranches
	fi
		
	if [[ $NPM_INSTALL == true ]]
	then
		npm install
	fi
	
	if [[ $CLEAN_XDF == true ]]
	then
		cleanXdf
	fi
	
	if [[ $CLEAN_MERGED == true ]]
	then
		cleanMerged
	fi
}

##################################
# Parse through the user options #
##################################
while getopts ":abhpmcnd:t:" opt; do
	case $opt in
		h)
			echo -e '\nScript to manage git and branch cleanup. Default does nothing
			\rUsage: gclean [option(s)]
			\r    Options:
			\r        -a: Clean all local branches in default/specified directory (no prompt)
			\r        -b: Iterates all local branches and sks user if they want to delete a branch
			\r        -d <path>: Sets the path to the repo
			\r        -p: Only prune local branches
			\r        -c: Run git clean
			\r        -n: Run npm install
			\r        -m: Clean already merged branches
			\r        -t: Override the default branch (e.g. if still using master as default branch. This defaults to "main")
			\r        default: Asks user permission for deletion in default path'
			exit 0
			;;
		a)
			ALL=true
			CLEAN_LOCAL=true
			;;
		b)
			CLEAN_LOCAL=true
			;;
		p)
			PRUNE_REMOTE=true
			;;
		c)
			CLEAN_XDF=true
			;;
		n)
			NPM_INSTALL=true
			;;
		d)
			cd $OPTARG || exit
			echo "Switched to: $OPTARG"
			
			if git rev-parse --git-dir > /dev/null 2>&1;
			then
				echo "Is a git repo"
			else
				echo -e "Not a git repo!\nExiting..."
				exit 1
			fi
			;;
		m)
			CLEAN_MERGED=true
			;;
		t)
			MAIN_BRANCH=${OPTARG}
			;;
		\?)
			echo "Invalid option: -$OPTARG"
			echo "Try again using the -h option for help"
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument"
			echo "Try again using the -h option for help"
			exit 1
			;;
	esac
done

main
